- name: Prepare Release
        if: env.WANT_RELEASE == 'true' && env.IS_PUSH == 'true' # Changed 'and' to '&&'
        run: |
          $hashMarkdown = @'
          This release contains the compiled files.

          '@
          $hashMarkdown | Out-File -FilePath hash.md

          # Navigate into the GoWR.Tweaks directory
          Set-Location -Path "${{ env.INSTALL_CONFIGURATION }}\${{ env.DLL_OUT }}"
          # Select only .asi files and compress them directly into the zip file
          Get-ChildItem -Path . -Filter "*.asi" | Compress-Archive -DestinationPath "${{ env.zip_file }}"
          # Navigate back to the workspace root
          Set-Location -Path "${{ github.workspace }}"

          # Ensure PDBs and any other unwanted files in the install directory are removed
          Remove-Item -Path ${{ env.INSTALL_CONFIGURATION }} -Recurse
      - name: Branch Check
        if: env.WANT_RELEASE == 'true' && env.IS_PUSH == 'true' # Changed 'and' to '&&'
        run: |
          $prerelease = ""
          if ("${{ env.BRANCH }}" -ieq "main")
          {
              $prerelease = ""
              echo "Is main release"
          }
          else
          {
              $prerelease = " --prerelease"
              echo "Is not main release: ${{ env.BRANCH }}"
          }
          echo "prerelease=$prerelease" >> $Env:GITHUB_ENV
      - name: Debug Release Information
        if: env.WANT_RELEASE == 'true' && env.IS_PUSH == 'true' # Changed 'and' to '&&'
        run: |
          echo "Creating release with tag: ${{ env.commit_ver }}"
          echo "Target SHA: ${{ github.sha }}"
          echo "Files to upload:"
          echo "  - ${{ env.zip_file }}"
          echo "Prerelease flag: ${{ env.prerelease }}"
          echo "Current working directory: $(pwd)"
          echo "Files in directory:"
          Get-ChildItem -Path . -File
      - name: Create Release
        if: env.WANT_RELEASE == 'true' && env.IS_PUSH == 'true' # Changed 'and' to '&&'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create "${{ env.commit_ver }}" `
            "${{ env.zip_file }}" `
            --target "${{ github.sha }}" `
            --title "${{ env.commit_ver }}" `
            --notes-file "hash.md" `
            ${{ env.prerelease }}
